#author : ryan_w_frank@mac.com
##Version : 1.0
- name: Install and setup Containerd.IO
  hosts: cbn-unx-06.the-cabin.home

###############################################
#
  tasks:
    - name: "Check for existing persistent kernel..."
      stat:
        path: /etc/modules-load.d/k8s.conf
      register: kernel_parameters
    - name: "Configure persistent loading of kernel modules"
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
      when: kernel_parameters.stat.exists == False
    - name: "Load kernel modules required to continue."
      modprobe:
        name: "{{ item.name }}"
        state: present
      with_items:
        - {name: "overlay"}
        - {name: "br_netfilter"}
    - name: "Ensure sysctl parameters are set."
      stat:
        path: /etc/sysctl.d/kubernetes.conf 
      register: sysctl_params
    - name: "Configure sysctl parameters if not present."
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      when: sysctl_params.stat.exists == False
    - name: "Restart sysctl to process changes"
      shell: sysctl --system
    - name: "Add required packages to setup containerd.io"
      apt:
        update_cache: yes
        name: curl,gnupg2,software-properties-common,apt-transport-https,ca-certificates
        state: present
    - name: "Check for docker repo GPG key"
      stat:
        path: /usr/share/keyrings/docker-archive-keyring.gpg
      register: sysctl_params
    - name: "Download GPG Key for official Docker repo"
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        dest: /tmp/gpg.key
        timeout: 45
        mode: '0744'
      when: sysctl_params.stat.exists == False
    - name: "Install GPG key"
      ansible.builtin.shell: /usr/bin/gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg < /tmp/gpg.key
      when: sysctl_params.stat.exists == False
    - name: "Grab architecture rom current platform"
      shell: /usr/bin/dpkg --print-architecture
      register: arch_type
    - name: "Grab release name from current platform:"
      shell: /usr/bin/lsb_release -cs
      register: lsb_release
    - name: "Add Docker repo to apt sources"
      shell: echo 'deb [arch={{ arch_type.stdout }}  signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ lsb_release.stdout }} stable' | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: "Add packages required for docker"
      register: updatesys
      apt:
        update_cache: yes
        name: containerd.io
        state: present
    - name: "Create container configuration directory."
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: 0755
    - name: "Generate basic config.toml file."
      shell: containerd config default>/etc/containerd/config.toml
    - name: "Restart containerd service and set to styart on boot."
      ansible.builtin.service:
        name: containerd
        enabled: yes
        state: restarted
